{"version":3,"sources":["img/user.svg","img/email.svg","img/password.svg","components/toast.js","components/SignUp.js","components/validate.js","components/Login.js","components/Test.js","components/Modules.js","App.js","index.js","components/SignUp.module.css"],"names":["notify","text","type","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","warn","error","SignUp","SPREADSHEET_ID","process","PRIVATE_KEY","SHEET_NAME","replace","data","setData","useState","name","email","password","confirmPassword","IsAccepted","errors","setErrors","touched","setTouched","useEffect","validate","test","String","toLowerCase","length","trim","changeHandler","event","target","checked","value","focusHandler","appendSpreadsheet","async","doc","GoogleSpreadsheet","useServiceAccountAuth","client_email","private_key","loadInfo","sheet","sheetsById","addRow","row","e","console","gapi","load","initClient","client","init","apiKey","clientId","discoveryDocs","scope","_jsxs","className","styles","container","children","formLogin","onSubmit","preventDefault","Object","keys","salt","bcrypt","genSaltSync","hash","hashSync","newRow","Name","Email","Password","autoComplete","_jsx","unCompleted","completed","placeholder","onChange","onFocus","src","userIcon","alt","emailIcon","passwordIcon","terms","id","htmlFor","style","color","textAlign","display","width","Link","to","ToastContainer","Login","navigate","useNavigate","userRow","getRows","find","compareSync","checkData","Test","location","useLocation","sheetName","state","answers","setAnswers","showScore","setShowScore","score","setScore","testQuestions","handleChange","questionId","prev","log","map","question","index","onClick","calculateScore","finalScore","Modules","testModules","setTestModules","sheetData","setSheetData","selectedSheetName","setSelectedSheetName","docRef","useRef","fetchSheets","authenticateAndLoadDoc","sheets","values","title","Id","testModules1","current","description","module","moduleId","moduleName","sheetsByIndex","_rawData","fetchSheetRows","App","Routes","Route","path","element","ReactDOM","render","BrowserRouter","document","getElementById","exports"],"mappings":"6XAAe,G,OAAA,IAA0B,kCCA1B,MAA0B,kCCA1B,MAA0B,qC,oCCElC,MAAMA,EAASA,CAACC,EAAMC,KACd,YAATA,EACFC,IAAMC,QAAQH,EAAM,CAClBI,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,IAEM,YAATV,EACTC,IAAMU,KAAKZ,EAAM,CACfI,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,IAGZT,IAAMW,MAAMb,EAAM,CAChBI,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,GAEd,E,4DCkTaG,MA9TAA,KACb,MAIMC,EAAiBC,+CAIjBC,GAHaD,48EAAYE,WAGXF,muDAAkCG,QAAQ,OAAQ,QAE/DC,EAAMC,GAAWC,mBAAS,CAC/BC,KAAM,GACNC,MAAO,GACPC,SAAU,GACVC,gBAAiB,GACjBC,YAAY,KAGPC,EAAQC,GAAaP,mBAAS,CAAC,IAC/BQ,EAASC,GAAcT,mBAAS,CAAC,GAExCU,qBAAU,KACRH,EC5CoBI,EAACb,EAAMnB,KAC7B,MAAM2B,EAAS,CAAC,EAuChB,OArCKR,EAAKI,MAEE,wJAAwJU,KAAKC,OAAOf,EAAKI,OAAOY,sBAGnLR,EAAOJ,MAFdI,EAAOJ,MAAQ,4BAFfI,EAAOJ,MAAQ,qBAOZJ,EAAKK,SAEGL,EAAKK,SAASY,QAAU,SAG5BT,EAAOH,SAFdG,EAAOH,SAAW,2CAFlBG,EAAOH,SAAW,uBAOP,WAATxB,IACGmB,EAAKG,KAAKe,cAGNV,EAAOL,KAFdK,EAAOL,KAAO,wBAIXH,EAAKM,gBAEGN,EAAKM,kBAAoBN,EAAKK,SACzCG,EAAOF,gBAAkB,gCAElBE,EAAOF,gBAJdE,EAAOF,gBAAkB,uBAOvBN,EAAKO,kBACAC,EAAOD,WAEdC,EAAOD,WAAa,iBAIjBC,CAAM,EDIDK,CAASb,EAAM,UAAU,GAClC,CAACA,EAAMU,IAEV,MAAMS,EAAiBC,IACK,eAAtBA,EAAMC,OAAOlB,KACfF,EAAQ,IAAKD,EAAM,CAACoB,EAAMC,OAAOlB,MAAOiB,EAAMC,OAAOC,UAErDrB,EAAQ,IAAKD,EAAM,CAACoB,EAAMC,OAAOlB,MAAOiB,EAAMC,OAAOE,OACvD,EAGIC,EAAgBJ,IACpBT,EAAW,IAAKD,EAAS,CAACU,EAAMC,OAAOlB,OAAO,GAAO,EAmFjDsB,EAAoBC,UAExB,MAAMC,EAAM,IAAIC,oBAAkBjC,GAClC,UACQgC,EAAIE,sBAAsB,CAC9BC,aAnHelC,oDAoHfmC,YAAalC,UAGT8B,EAAIK,WAEV,MAAMC,EAAQN,EAAIO,WA1HLtC,SA2HQqC,EAAME,OAAOC,EACpC,CAAE,MAAOC,GACPC,QAAQ7C,MAAM,UAAW4C,EAC3B,GAIFzB,qBAAU,KAWR2B,IAAKC,KAAK,gBAVSC,KACjBF,IAAKG,OAAOC,KAAK,CACfC,OAzIUhD,0CA0IViD,SA3IYjD,2EA4IZkD,cAAe,CACb,4DAEFC,MA7ISnD,gDA8IT,GAEiC,GACpC,IAwBH,OACEoD,eAAA,OAAKC,UAAWC,IAAOC,UAAUC,SAAA,CAC/BJ,eAAA,QACEC,UAAWC,IAAOG,UAClBC,SAhFmBlC,IAEvB,GADAA,EAAMmC,iBACDC,OAAOC,KAAKjD,GAAQS,OAQvBtC,EAAO,4BAA6B,SACpCgC,EAAW,CACTR,MAAM,EACNC,OAAO,EACPC,UAAU,EACVC,iBAAiB,EACjBC,YAAY,QAdiB,CAE/B,IAAImD,EAAOC,IAAOC,YAAY,IAC1BC,EAAOF,IAAOG,SAAS9D,EAAKK,SAAUqD,GAC1C,MAAMK,EAAS,CAAEC,KAAMhE,EAAKG,KAAM8D,MAAOjE,EAAKI,MAAMY,cAAekD,SAASL,GAC5EpC,EAAmBsC,GACnBpF,EAAO,4BAA6B,UACtC,CASA,EA+DIwF,aAAa,MAAKf,SAAA,CAElBgB,cAAA,MAAAhB,SAAI,YACJJ,eAAA,OAAAI,SAAA,CACEJ,eAAA,OACEC,UACEzC,EAAOL,MAAQO,EAAQP,KACnB+C,IAAOmB,aACN7D,EAAOL,MAAQO,EAAQP,KACxB+C,IAAOoB,eACP/E,EACL6D,SAAA,CAEDgB,cAAA,SACEvF,KAAK,OACLsB,KAAK,OACLoB,MAAOvB,EAAKG,KACZoE,YAAY,OACZC,SAAUrD,EACVsD,QAASjD,EACT2C,aAAa,QAEfC,cAAA,OAAKM,IAAKC,EAAUC,IAAI,QAEzBpE,EAAOL,MAAQO,EAAQP,MACtBiE,cAAA,QAAMnB,UAAWC,IAAOzD,MAAM2D,SAAE5C,EAAOL,UAG3C6C,eAAA,OAAAI,SAAA,CACEJ,eAAA,OACEC,UACEzC,EAAOJ,OAASM,EAAQN,MACpB8C,IAAOmB,aACN7D,EAAOJ,OAASM,EAAQN,MACzB8C,IAAOoB,eACP/E,EACL6D,SAAA,CAEDgB,cAAA,SACEvF,KAAK,OACLsB,KAAK,QACLoB,MAAOvB,EAAKI,MACZmE,YAAY,SACZC,SAAUrD,EACVsD,QAASjD,EACT2C,aAAa,QAEfC,cAAA,OAAKM,IAAKG,EAAWD,IAAI,QAE1BpE,EAAOJ,OAASM,EAAQN,OACvBgE,cAAA,QAAMnB,UAAWC,IAAOzD,MAAM2D,SAAE5C,EAAOJ,WAG3C4C,eAAA,OAAAI,SAAA,CACEJ,eAAA,OACEC,UACEzC,EAAOH,UAAYK,EAAQL,SACvB6C,IAAOmB,aACN7D,EAAOH,UAAYK,EAAQL,SAC5B6C,IAAOoB,eACP/E,EACL6D,SAAA,CAEDgB,cAAA,SACEvF,KAAK,WACLsB,KAAK,WACLoB,MAAOvB,EAAKK,SACZkE,YAAY,WACZC,SAAUrD,EACVsD,QAASjD,EACT2C,aAAa,QAEfC,cAAA,OAAKM,IAAKI,EAAcF,IAAI,QAE7BpE,EAAOH,UAAYK,EAAQL,UAC1B+D,cAAA,QAAMnB,UAAWC,IAAOzD,MAAM2D,SAAE5C,EAAOH,cAG3C2C,eAAA,OAAAI,SAAA,CACEJ,eAAA,OACEC,UACEzC,EAAOF,iBAAmBI,EAAQJ,gBAC9B4C,IAAOmB,aACN7D,EAAOF,iBAAmBI,EAAQJ,kBAElCE,EAAOF,iBAAmBI,EAAQJ,gBADnC4C,IAAOoB,eAGP/E,EACL6D,SAAA,CAEDgB,cAAA,SACEvF,KAAK,WACLsB,KAAK,kBACLoB,MAAOvB,EAAKM,gBACZiE,YAAY,mBACZC,SAAUrD,EACVsD,QAASjD,EACT2C,aAAa,QAEfC,cAAA,OAAKM,IAAKI,EAAcF,IAAI,QAE7BpE,EAAOF,iBAAmBI,EAAQJ,iBACjC8D,cAAA,QAAMnB,UAAWC,IAAOzD,MAAM2D,SAAE5C,EAAOF,qBAG3C0C,eAAA,OAAAI,SAAA,CACEJ,eAAA,OAAKC,UAAWC,IAAO6B,MAAM3B,SAAA,CAC3BgB,cAAA,SACEvF,KAAK,WACLsB,KAAK,aACLoB,MAAOvB,EAAKO,WACZyE,GAAG,SACHR,SAAUrD,EACVsD,QAASjD,IAEX4C,cAAA,SAAOa,QAAQ,SAAQ7B,SAAC,wCAEzB5C,EAAOD,YAAcG,EAAQH,YAC5B6D,cAAA,QAAMnB,UAAWC,IAAOzD,MAAM2D,SAAE5C,EAAOD,gBAG3CyC,eAAA,OAAAI,SAAA,CACEgB,cAAA,UAAQvF,KAAK,SAAQuE,SAAC,mBACtBJ,eAAA,QACEkC,MAAO,CACLC,MAAO,UACPC,UAAW,SACXC,QAAS,eACTC,MAAO,QACPlC,SAAA,CACH,2BACyBgB,cAACmB,IAAI,CAACC,GAAG,SAAQpC,SAAC,qBAIhDgB,cAACqB,IAAc,MACX,E,OExKKC,MA3JDA,KAMO9F,48EAAYE,WAL/B,MAQMD,EAAcD,muDAAkCG,QAAQ,OAAQ,MAChE4F,EAAWC,eAIV5F,EAAMC,GAAWC,mBAAS,CAC/BE,MAAO,GACPC,SAAU,MAGLK,EAASC,GAAcT,mBAAS,CAAC,GA+DlCiB,EAAiBC,IACK,eAAtBA,EAAMC,OAAOlB,KACfF,EAAQ,IAAKD,EAAM,CAACoB,EAAMC,OAAOlB,MAAOiB,EAAMC,OAAOC,UAErDrB,EAAQ,IAAKD,EAAM,CAACoB,EAAMC,OAAOlB,MAAOiB,EAAMC,OAAOE,OACvD,EAGIC,EAAgBJ,IACpBT,EAAW,IAAKD,EAAS,CAACU,EAAMC,OAAOlB,OAAO,GAAO,EAQvD,OACE6C,eAAA,OAAKC,UAAWC,IAAOC,UAAUC,SAAA,CAC/BJ,eAAA,QACEC,UAAWC,IAAOG,UAClBC,SATiBlC,IACrBA,EAAMmC,iBA7CU7B,WAEhB,MAAMC,EAAM,IAAIC,oBA/CKhC,gDAgDrB,UACQ+B,EAAIE,sBAAsB,CAC9BC,aA/CelC,oDAgDfmC,YAAalC,UAGT8B,EAAIK,WAEV,MAAMC,EAAQN,EAAIO,WAtDLtC,GAyDPiG,SAFa5D,EAAM6D,WAEJC,MAAK3D,GAAOA,EAAI6B,QAAUjE,EAAKI,MAAMY,gBAErD6E,GACHlH,EAAO,iBAAkB,SAGXgF,IAAOqC,YAAYhG,EAAKK,SAAUwF,EAAQ3B,WAExDvF,EAAO,mBAAoB,WAC3BgH,EAAS,aAEThH,EAAO,+BAAgC,QAE3C,CAAE,MAAO0D,GACPC,QAAQ7C,MAAM,UAAW4C,EAC3B,GAiBA4D,EAAe,EAQX9B,aAAa,MAAKf,SAAA,CAElBgB,cAAA,MAAAhB,SAAI,YACJgB,cAAA,OAAAhB,SACEJ,eAAA,OAAAI,SAAA,CACEgB,cAAA,SACEvF,KAAK,OACLsB,KAAK,QACLoB,MAAOvB,EAAKI,MACZmE,YAAY,SACZC,SAAUrD,EACVsD,QAASjD,EACT2C,aAAa,QAEfC,cAAA,OAAKM,IAAKG,EAAWD,IAAI,UAG7BR,cAAA,OAAAhB,SACEJ,eAAA,OAAAI,SAAA,CACEgB,cAAA,SACEvF,KAAK,WACLsB,KAAK,WACLoB,MAAOvB,EAAKK,SACZkE,YAAY,WACZC,SAAUrD,EACVsD,QAASjD,EACT2C,aAAa,QAEfC,cAAA,OAAKM,IAAKI,EAAcF,IAAI,UAIhC5B,eAAA,OAAAI,SAAA,CACEgB,cAAA,UAAQvF,KAAK,SAAQuE,SAAC,UACtBJ,eAAA,QACEkC,MAAO,CACLC,MAAO,UACPC,UAAW,SACXC,QAAS,eACTC,MAAO,QACPlC,SAAA,CACH,yBACuBgB,cAACmB,IAAI,CAACC,GAAG,UAASpC,SAAC,4BAI/CgB,cAACqB,IAAc,MACX,EClEKS,MA1FFA,KACX,MAAMC,EAAWC,eACX,UAAEC,EAAS,KAAErG,GAASmG,EAASG,OAAS,CAAC,GACxCC,EAASC,GAActG,mBAAS,KACjCuG,EAAUC,GAAgBxG,oBAAS,IACnCyG,EAAMC,GAAY1G,mBAAS,GAEjC,IAAKF,GAAwB,IAAhBA,EAAKiB,OAAc,OAAOmD,cAAA,KAAAhB,SAAG,wBAE1C,MAAMyD,EAAgB7G,EAEhB8G,EAAeA,CAACC,EAAYxF,KAChCiF,GAAWQ,IAAI,IAAUA,EAAM,CAACD,GAAaxF,MAC7Ce,QAAQ2E,IAAIV,EAAQ,EAgBtB,OACEvD,eAAA,OAAKC,UAAWC,IAAOC,UAAUC,SAAA,CAC/BgB,cAAA,QACEnB,UAAWC,IAAOG,UAClBc,aAAa,MAAKf,SAElBJ,eAAA,OAAAI,SAAA,CACIgB,cAAA,MAAInB,UAAU,wBAAuBG,SAAEiD,IACvCjC,cAAA,SAAM,IAACA,cAAA,SACNyC,EAAcK,KAAI,CAACC,EAASC,IAC7BpE,eAAA,OAAuBC,UAAU,4DAA2DG,SAAA,CACxFgB,cAAA,KAAAhB,SAAI+D,EAAS/E,IAAI,KACjBgC,cAAA,OAAKnB,UAAU,QAAOG,SAClBJ,eAAA,SAAAI,SAAA,CACIgB,cAAA,SAAOvF,KAAK,QAAQ0C,MAAO4F,EAAS/E,IAAI,GAAIjC,KAAMgH,EAASnC,GAAIR,SAAUA,IAAMsC,EAAaK,EAASnC,GAAI,OACxGmC,EAAS/E,IAAI,QAGtBgC,cAAA,OAAKnB,UAAU,QAAOG,SAClBJ,eAAA,SAAAI,SAAA,CACIgB,cAAA,SAAOvF,KAAK,QAAQ0C,MAAO4F,EAAS/E,IAAI,GAAIjC,KAAMgH,EAASnC,GAAKR,SAAUA,IAAMsC,EAAaK,EAASnC,GAAI,OACzGmC,EAAS/E,IAAI,QAGtBgC,cAAA,OAAKnB,UAAU,QAAOG,SAClBJ,eAAA,SAAAI,SAAA,CACIgB,cAAA,SAAOvF,KAAK,QAAQ0C,MAAO4F,EAAS/E,IAAI,GAAIjC,KAAMgH,EAASnC,GAAIR,SAAUA,IAAMsC,EAAaK,EAASnC,GAAG,OACvGmC,EAAS/E,IAAI,QAGtBgC,cAAA,OAAKnB,UAAU,QAAOG,SAClBJ,eAAA,SAAAI,SAAA,CACIgB,cAAA,SAAOvF,KAAK,QAAQ0C,MAAO4F,EAAS/E,IAAI,GAAIjC,KAAMgH,EAASnC,GAAIR,SAAUA,IAAMsC,EAAaK,EAASnC,GAAI,OACxGmC,EAAS/E,IAAI,QAItBgC,cAAA,SAAM,IAACA,cAAA,WA3BD+C,EAASnC,MA8BnBZ,cAAA,SAAM,IAACA,cAAA,SAEPA,cAAA,UAAQvF,KAAK,SAASwI,QAAUA,IAvDjBC,MAEnB,IAAIC,EAAa,EACjB,IAAK,IAAIR,KAAcR,EACfM,EAAcE,GAAY3E,IAAI,KAAOmE,EAAQQ,IAC7CQ,IAKR,OAFAX,EAASW,GACTb,GAAa,GACNC,CAAK,EA6C8BW,GAAkBrE,UAAU,kEAAiEG,SAAC,WAGpIgB,cAAA,SAAM,IAACA,cAAA,SACPA,cAAA,OAAKY,GAAG,QAAQE,MAAOuB,EAAY,CAAC,EAAI,CAAEpB,QAAS,QAASjC,SACxDJ,eAAA,KAAAI,SAAA,CAAG,uBAAqBuD,EAAM,cAMxCvC,cAACqB,IAAc,MAGX,ECqCK+B,MAvHCA,KACd,MAEM3H,EAAcD,muDAAkCG,QAAQ,OAAQ,MAChE4F,EAAWC,eAGV5F,EAAMC,GAAWC,mBAAS,CAC/BE,MAAO,GACPC,SAAU,MAGLK,EAASC,GAAcT,mBAAS,CAAC,IACjCuH,EAAaC,GAAkBxH,mBAAS,KACxCyH,EAAWC,GAAgB1H,mBAAS,KACpC2H,EAAmBC,GAAwB5H,mBAAS,IACrD6H,EAASC,iBAAO,MAEtBpH,qBAAU,KAEJqH,IACA3F,QAAQ2E,IAAI,SAAS,GACtB,IAEL,MAAMgB,EAAcvG,UAClB,IAEE,MAAMC,QAAauG,IACbC,EAAS3E,OAAO4E,OAAOzG,EAAIO,YAAYgF,KAAIjF,IAAK,CACtD+B,KAAM/B,EAAMoG,MACZC,GAAIrG,EAAMmF,UAEVM,EAAeS,GAEf7F,QAAQ2E,IAAIsB,EAEd,CAAE,MAAOlG,GACPC,QAAQ7C,MAAM,UAAW4C,EAC3B,GAGI6F,EAAyBxG,UAC7B,IAAKqG,EAAOS,QAAS,CACnB,MAAM7G,EAAM,IAAIC,oBA1CGhC,gDA2CnB,UACQ+B,EAAIE,sBAAsB,CAChCC,aA5CelC,oDA6CfmC,YAAalC,UAET8B,EAAIK,WACV+F,EAAOS,QAAU7G,CACjB,CACA,MAAMU,GACJC,QAAQ7C,MAAM,UAAW4C,EAC3B,CACF,CACA,OAAO0F,EAAOS,OAAO,EA4BjBD,EAAe,CACnB,CAAEvD,GAAI,EAAG7E,KAAM,WAAYsI,YAAa,WACxC,CAAEzD,GAAI,EAAG7E,KAAM,WAAYsI,YAAa,WACxC,CAAEzD,GAAI,EAAG7E,KAAM,WAAYsI,YAAa,WACxC,CAAEzD,GAAI,EAAG7E,KAAM,WAAYsI,YAAa,aACxC,CAAEzD,GAAI,EAAG7E,KAAM,WAAYsI,YAAa,YAG1C,OACEzF,eAAA,OAAKC,UAAWC,IAAOC,UAAUC,SAAA,CAC/BJ,eAAA,QACEC,UAAWC,IAAOG,UAClBc,aAAa,MAAKf,SAAA,CAElBgB,cAAA,MAAAhB,SAAI,2BACJgB,cAAA,OAAAhB,SACKqE,EAAYP,KAAKwB,GAClB1F,eAAA,OAAqBC,UAAU,4DAA2DG,SAAA,CACtFgB,cAAA,MAAInB,UAAU,wBAAuBG,SAAEsF,EAAO1E,OAC9CI,cAAA,UAAQvF,KAAK,SAASwI,QAAUA,IA5CvB3F,OAAMiH,EAASC,KACpC,IAEE,MACM3G,SADaiG,KACDW,cAAcF,GAG1B3I,SADaiC,EAAM6D,WACPoB,KAAI,CAAC9E,EAAIgF,KAAK,CAChChF,IAAKA,EAAI0G,SACT9D,GAAIoC,MAGJ9E,QAAQ2E,IAAIjH,GACZ4H,EAAa5H,GACb8H,EAAqBc,GACrBjD,EAAS,QAAQ,CAAEW,MAAO,CACpBD,UAAWuC,EACX5I,KAAMA,IAGd,CAAE,MAAOqC,GACPC,QAAQ7C,MAAM,UAAW4C,EAC3B,GAsBkD0G,CAAeL,EAAOJ,GAAGI,EAAO1E,MAAOf,UAAU,kEAAiEG,SAAC,eAGzJgB,cAAA,SAAM,IAACA,cAAA,WALDsE,EAAOJ,WAWvBlE,cAACqB,IAAc,MAEX,EC1GKuD,MAZf,WACE,OACIhG,eAACiG,IAAM,CAAA7F,SAAA,CACLgB,cAAC8E,IAAK,CAACC,KAAK,SAASC,QAAShF,cAACsB,EAAK,MACpCtB,cAAC8E,IAAK,CAACC,KAAK,UAAUC,QAAShF,cAAC1E,EAAM,MACtC0E,cAAC8E,IAAK,CAACC,KAAK,WAAWC,QAAShF,cAACoD,EAAO,MACxCpD,cAAC8E,IAAK,CAACC,KAAK,QAAQC,QAAShF,cAAC8B,EAAI,MAClC9B,cAAC8E,IAAK,CAACC,KAAK,IAAIC,QAAShF,cAAC1E,EAAM,QAGxC,ECVA2J,IAASC,OACPlF,cAACmF,IAAa,CAAAnG,SACZgB,cAAC4E,EAAG,MAENQ,SAASC,eAAe,Q,oBCT1Bf,EAAOgB,QAAU,CAAC,UAAY,0BAA0B,UAAY,0BAA0B,YAAc,4BAA4B,UAAY,0BAA0B,MAAQ,sBAAsB,MAAQ,sBAAsB,WAAa,2B","file":"static/js/main.b774ee2c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/user.f47683c7.svg\";","export default __webpack_public_path__ + \"static/media/email.0accdc73.svg\";","export default __webpack_public_path__ + \"static/media/password.b5ad9e0e.svg\";","import { toast } from \"react-toastify\";\n\nexport const notify = (text, type) => {\n  if (type === \"success\") {\n    toast.success(text, {\n      position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  } else if (type === \"warning\") {\n    toast.warn(text, {\n      position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  } else {\n    toast.error(text, {\n      position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  }\n};\n","import React, { useEffect, useState } from \"react\";\n//Icon\nimport userIcon from \"../img/user.svg\";\nimport emailIcon from \"../img/email.svg\";\nimport passwordIcon from \"../img/password.svg\";\n// Validate\nimport { validate } from \"./validate\";\n// Styles\nimport styles from \"./SignUp.module.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\n// Toast\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { notify } from \"./toast\";\n//\nimport { Link } from \"react-router-dom\";\n// Axios\nimport axios from \"axios\";\nimport { gapi } from \"gapi-script\";\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\nimport bcrypt from \"bcryptjs-react\";\n\nconst SignUp = () => {\n  const baseUrl = process.env.REACT_APP_BASE_URL;\n  const CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\n  const API_KEY = process.env.REACT_APP_API_KEY;\n  const SCOPES = process.env.REACT_APP_SCOPES;\n  const SPREADSHEET_ID = process.env.REACT_APP_SPREADSHEET_ID; // extracted from the URL\n  const SHEET_NAME = process.env.SHEET_NAME // or whatever your tab name is\n  const SHEET_ID = process.env.REACT_APP_SHEETID;\n  const CLIENT_EMAIL = process.env.REACT_APP_CLIENT_EMAIL;\n  const PRIVATE_KEY = process.env.REACT_APP_PRIVATE_KEY.replace(/\\\\n/g, '\\n');\n\n  const [data, setData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    IsAccepted: false,\n  });\n\n  const [errors, setErrors] = useState({});\n  const [touched, setTouched] = useState({});\n\n  useEffect(() => {\n    setErrors(validate(data, \"signUp\"));\n  }, [data, touched]);\n\n  const changeHandler = (event) => {\n    if (event.target.name === \"IsAccepted\") {\n      setData({ ...data, [event.target.name]: event.target.checked });\n    } else {\n      setData({ ...data, [event.target.name]: event.target.value });\n    }\n  };\n\n  const focusHandler = (event) => {\n    setTouched({ ...touched, [event.target.name]: true });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    if (!Object.keys(errors).length) {\n      debugger;\n      const sheetUrl = `${baseUrl}`;\n      const formData = {\n        Name: data.name,\n        Email: data.email.toLowerCase(),\n        Password: data.password,\n        Operation: \"ADD USER\",\n      };\n      var req = {\n        redirect: \"follow\",\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(formData),\n        //mode: \"no-cors\",\n        muteHttpExceptions: true,\n      };\n      const pushData = async () => {\n        await fetch(sheetUrl, req);\n      };\n      try {\n        pushData();\n        notify(\"User created successfully\", \"success\");\n      } catch (error) {\n        notify(\"error\", \"error\");\n      }\n    } else {\n      notify(\"Please Check fields again\", \"error\");\n      setTouched({\n        name: true,\n        email: true,\n        password: true,\n        confirmPassword: true,\n        IsAccepted: false,\n      });\n    }\n  };\n\n  const submitHandlerGapi = (event) => {\n    event.preventDefault();\n    if (!Object.keys(errors).length) {\n      debugger;\n      addRowToSheet([data.name,data.email.toLowerCase(),data.password]);\n    } else {\n      notify(\"Please Check fields again\", \"error\");\n      setTouched({\n        name: true,\n        email: true,\n        password: true,\n        confirmPassword: true,\n        IsAccepted: false,\n      });\n    }\n  };\n\n  const submitHandlerGS = (event) => {\n    event.preventDefault();\n    if (!Object.keys(errors).length) {\n      debugger;\n      var salt = bcrypt.genSaltSync(10);\n      var hash = bcrypt.hashSync(data.password, salt);\n      const newRow = { Name: data.name, Email: data.email.toLowerCase(), Password:hash};\n      appendSpreadsheet (newRow);\n      notify(\"User created successfully\", \"success\");\n    } else {\n      notify(\"Please Check fields again\", \"error\");\n      setTouched({\n        name: true,\n        email: true,\n        password: true,\n        confirmPassword: true,\n        IsAccepted: false,\n      });\n    }\n  };\n\n  const appendSpreadsheet = async (row) => {\n    debugger;\n    const doc = new GoogleSpreadsheet(SPREADSHEET_ID);\n    try {\n      await doc.useServiceAccountAuth({\n        client_email: CLIENT_EMAIL,\n        private_key: PRIVATE_KEY\n      });\n      // loads document properties and worksheets\n      await doc.loadInfo();\n      debugger;\n      const sheet = doc.sheetsById[SHEET_ID];\n      const result = await sheet.addRow(row);\n    } catch (e) {\n      console.error('Error: ', e);\n    }\n  };\n\n\n  useEffect(() => {\n    const initClient = () => {\n      gapi.client.init({\n        apiKey: API_KEY,\n        clientId: CLIENT_ID,\n        discoveryDocs: [\n          \"https://sheets.googleapis.com/$discovery/rest?version=v4\",\n        ],\n        scope: SCOPES,\n      });\n    };\n    gapi.load(\"client:auth2\", initClient);\n  }, []);\n\n  const signIn = () => {\n    gapi.auth2.getAuthInstance().signIn();\n  };\n\n  const addRowToSheet = async (dataRow) => {\n    try {\n      gapi.auth2.getAuthInstance().signIn();\n      const response = await gapi.client.sheets.spreadsheets.values.append({\n        spreadsheetId: SPREADSHEET_ID,\n        range: `${SHEET_NAME}!A1`,\n        valueInputOption: \"USER_ENTERED\",\n        insertDataOption: \"INSERT_ROWS\",\n        resource: {\n          values: [dataRow], // example: ['John Doe', 'john@example.com']\n        },\n      });\n      notify(\"User created successfully\", \"success\");\n    } catch (err) {\n      console.error(\"Unable to create user:\", err);\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <form\n        className={styles.formLogin}\n        onSubmit={submitHandlerGS}\n        autoComplete=\"off\"\n      >\n        <h2>Sign Up</h2>\n        <div>\n          <div\n            className={\n              errors.name && touched.name\n                ? styles.unCompleted\n                : !errors.name && touched.name\n                ? styles.completed\n                : undefined\n            }\n          >\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={data.name}\n              placeholder=\"Name\"\n              onChange={changeHandler}\n              onFocus={focusHandler}\n              autoComplete=\"off\"\n            />\n            <img src={userIcon} alt=\"\" />\n          </div>\n          {errors.name && touched.name && (\n            <span className={styles.error}>{errors.name}</span>\n          )}\n        </div>\n        <div>\n          <div\n            className={\n              errors.email && touched.email\n                ? styles.unCompleted\n                : !errors.email && touched.email\n                ? styles.completed\n                : undefined\n            }\n          >\n            <input\n              type=\"text\"\n              name=\"email\"\n              value={data.email}\n              placeholder=\"E-mail\"\n              onChange={changeHandler}\n              onFocus={focusHandler}\n              autoComplete=\"off\"\n            />\n            <img src={emailIcon} alt=\"\" />\n          </div>\n          {errors.email && touched.email && (\n            <span className={styles.error}>{errors.email}</span>\n          )}\n        </div>\n        <div>\n          <div\n            className={\n              errors.password && touched.password\n                ? styles.unCompleted\n                : !errors.password && touched.password\n                ? styles.completed\n                : undefined\n            }\n          >\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={data.password}\n              placeholder=\"Password\"\n              onChange={changeHandler}\n              onFocus={focusHandler}\n              autoComplete=\"off\"\n            />\n            <img src={passwordIcon} alt=\"\" />\n          </div>\n          {errors.password && touched.password && (\n            <span className={styles.error}>{errors.password}</span>\n          )}\n        </div>\n        <div>\n          <div\n            className={\n              errors.confirmPassword && touched.confirmPassword\n                ? styles.unCompleted\n                : !errors.confirmPassword && touched.confirmPassword\n                ? styles.completed\n                : !errors.confirmPassword && touched.confirmPassword\n                ? styles.completed\n                : undefined\n            }\n          >\n            <input\n              type=\"password\"\n              name=\"confirmPassword\"\n              value={data.confirmPassword}\n              placeholder=\"Confirm Password\"\n              onChange={changeHandler}\n              onFocus={focusHandler}\n              autoComplete=\"off\"\n            />\n            <img src={passwordIcon} alt=\"\" />\n          </div>\n          {errors.confirmPassword && touched.confirmPassword && (\n            <span className={styles.error}>{errors.confirmPassword}</span>\n          )}\n        </div>\n        <div>\n          <div className={styles.terms}>\n            <input\n              type=\"checkbox\"\n              name=\"IsAccepted\"\n              value={data.IsAccepted}\n              id=\"accept\"\n              onChange={changeHandler}\n              onFocus={focusHandler}\n            />\n            <label htmlFor=\"accept\">I accept terms of privacy policy</label>\n          </div>\n          {errors.IsAccepted && touched.IsAccepted && (\n            <span className={styles.error}>{errors.IsAccepted}</span>\n          )}\n        </div>\n        <div>\n          <button type=\"submit\">Create Account</button>\n          <span\n            style={{\n              color: \"#a29494\",\n              textAlign: \"center\",\n              display: \"inline-block\",\n              width: \"100%\",\n            }}\n          >\n            Already have a account? <Link to=\"/login\">Sign In</Link>\n          </span>\n        </div>\n      </form>\n      <ToastContainer />\n    </div>\n  );\n};\n\nexport default SignUp;\n","export const validate = (data, type) => {\n  const errors = {};\n\n  if (!data.email) {\n    errors.email = \"Email is Required!\";\n  } else if (!/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(String(data.email).toLowerCase())) {\n    errors.email = \"Email address is invalid!\";\n  } else {\n    delete errors.email;\n  }\n\n  if (!data.password) {\n    errors.password = \"Password is Required\";\n  } else if (!(data.password.length >= 6)) {\n    errors.password = \"Password needs to be 6 character or more\";\n  } else {\n    delete errors.password;\n  }\n\n  if (type === \"signUp\") {\n    if (!data.name.trim()) {\n      errors.name = \"Username is Required!\";\n    } else {\n      delete errors.name;\n    }\n    if (!data.confirmPassword) {\n      errors.confirmPassword = \"Confirm the Password\";\n    } else if (!(data.confirmPassword === data.password)) {\n      errors.confirmPassword = \"Password is not match!\";\n    } else {\n      delete errors.confirmPassword;\n    }\n\n    if (data.IsAccepted) {\n      delete errors.IsAccepted;\n    } else {\n      errors.IsAccepted = \"Accept terms!\";\n    }\n  }\n\n  return errors;\n};\n","import React, { useState, useEffect } from \"react\";\nimport emailIcon from \"../img/email.svg\";\nimport passwordIcon from \"../img/password.svg\";\nimport styles from \"./SignUp.module.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { notify } from \"./toast\";\nimport { Link,useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\nimport bcrypt from \"bcryptjs-react\";\n\nconst Login = () => {\n  const baseUrl = process.env.REACT_APP_BASE_URL;\n  const CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\n  const API_KEY = process.env.REACT_APP_API_KEY;\n  const SCOPES = process.env.REACT_APP_SCOPES;\n  const SPREADSHEET_ID = process.env.REACT_APP_SPREADSHEET_ID; // extracted from the URL\n  const SHEET_NAME = process.env.SHEET_NAME // or whatever your tab name is\n  const SHEET_ID = process.env.REACT_APP_SHEETID;\n  const CLIENT_EMAIL = process.env.REACT_APP_CLIENT_EMAIL;\n  const PRIVATE_KEY = process.env.REACT_APP_PRIVATE_KEY.replace(/\\\\n/g, '\\n');\n  const navigate = useNavigate();\n\n\n\n  const [data, setData] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const [touched, setTouched] = useState({});\n\n  const chaeckData = async (obj) => {\n    debugger;\n    const baseUrl = process.env.REACT_APP_BASE_URL;\n    const sheetUrl = `${baseUrl}`;\n    const formData = {\n      Email: data.email.toLowerCase(),\n      Password: data.password,\n      Operation: \"USER LOGIN\",\n    };\n    var req = {\n      redirect: \"follow\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(formData),\n      //mode: \"no-cors\",\n      muteHttpExceptions: true,\n    };\n    const api = await fetch(sheetUrl, req);\n    const res = await api.json();\n    console.log(res);\n    toast.promise(api, {\n      pending: \"Loading your data...\",\n      success: false,\n      error: \"Something went wrong!\",\n    });\n  };\n\n  const checkData = async (obj) => {\n    debugger;\n    const doc = new GoogleSpreadsheet(SPREADSHEET_ID);\n    try {\n      await doc.useServiceAccountAuth({\n        client_email: CLIENT_EMAIL,\n        private_key: PRIVATE_KEY\n      });\n      // loads document properties and worksheets\n      await doc.loadInfo();\n      debugger;\n      const sheet = doc.sheetsById[SHEET_ID];\n      const rows = await sheet.getRows();\n\n      const userRow = rows.find(row => row.Email === data.email.toLowerCase());\n\n      if (!userRow) {\n        notify(\"User not found\", \"error\");\n      }\n\n      const isMatch = bcrypt.compareSync(data.password, userRow.Password);\n      if (isMatch) {\n        notify(\"Successful login\", \"success\");\n        navigate(\"/modules\");\n      } else {\n        notify(\"Invalid Username or password\", \"error\");\n      }\n    } catch (e) {\n      console.error('Error: ', e);\n    }  \n  };\n\n  const changeHandler = (event) => {\n    if (event.target.name === \"IsAccepted\") {\n      setData({ ...data, [event.target.name]: event.target.checked });\n    } else {\n      setData({ ...data, [event.target.name]: event.target.value });\n    }\n  };\n\n  const focusHandler = (event) => {\n    setTouched({ ...touched, [event.target.name]: true });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    checkData(data);\n  };\n\n  return (\n    <div className={styles.container}>\n      <form\n        className={styles.formLogin}\n        onSubmit={submitHandler}\n        autoComplete=\"off\"\n      >\n        <h2>Sign In</h2>\n        <div>\n          <div>\n            <input\n              type=\"text\"\n              name=\"email\"\n              value={data.email}\n              placeholder=\"E-mail\"\n              onChange={changeHandler}\n              onFocus={focusHandler}\n              autoComplete=\"off\"\n            />\n            <img src={emailIcon} alt=\"\" />\n          </div>\n        </div>\n        <div>\n          <div>\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={data.password}\n              placeholder=\"Password\"\n              onChange={changeHandler}\n              onFocus={focusHandler}\n              autoComplete=\"off\"\n            />\n            <img src={passwordIcon} alt=\"\" />\n          </div>\n        </div>\n\n        <div>\n          <button type=\"submit\">Login</button>\n          <span\n            style={{\n              color: \"#a29494\",\n              textAlign: \"center\",\n              display: \"inline-block\",\n              width: \"100%\",\n            }}\n          >\n            Don't have a account? <Link to=\"/signup\">Create account</Link>\n          </span>\n        </div>\n      </form>\n      <ToastContainer />\n    </div>\n  );\n};\n\nexport default Login;\n","import \"react-toastify/dist/ReactToastify.css\";\r\nimport styles from \"./SignUp.module.css\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\n\r\nconst Test = () => {\r\n  const location = useLocation();\r\n  const { sheetName, data } = location.state || {};\r\n  const [answers, setAnswers] = useState([]);\r\n  const[showScore,setShowScore] = useState(false);\r\n  const[score,setScore] = useState(0);\r\n\r\n  if (!data || data.length === 0) return <p>No data to display.</p>;\r\n\r\n  const testQuestions = data;\r\n\r\n  const handleChange = (questionId, value) => {\r\n    setAnswers(prev => ({ ...prev, [questionId]: value }));\r\n    console.log(answers);\r\n  };\r\n\r\n    const calculateScore = () => {\r\n        debugger;\r\n        var finalScore = 0\r\n        for (let questionId in answers) {\r\n            if (testQuestions[questionId].row[5] === answers[questionId]) {\r\n                finalScore++;\r\n            }\r\n        }\r\n        setScore(finalScore);\r\n        setShowScore(true);\r\n        return score;\r\n    };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <form\r\n        className={styles.formLogin}\r\n        autoComplete=\"off\"\r\n      >\r\n        <div>\r\n            <h2 className=\"text-xl font-semibold\">{sheetName}</h2>\r\n            <br /> <br /> \r\n            {testQuestions.map((question,index) => (\r\n            <div key={question.id} className=\"bg-white p-4 rounded-lg shadow hover:shadow-md transition\">\r\n                <p>{question.row[0]}</p>\r\n                <div className=\"radio\">\r\n                    <label>\r\n                        <input type=\"radio\" value={question.row[1]} name={question.id} onChange={() => handleChange(question.id, \"A\")}/>\r\n                        {question.row[1]}\r\n                    </label>\r\n                </div>\r\n                <div className=\"radio\">\r\n                    <label>\r\n                        <input type=\"radio\" value={question.row[2]} name={question.id}  onChange={() => handleChange(question.id, \"B\")}/>\r\n                        {question.row[2]}\r\n                    </label>\r\n                </div>\r\n                <div className=\"radio\">\r\n                    <label>\r\n                        <input type=\"radio\" value={question.row[3]} name={question.id} onChange={() => handleChange(question.id,\"C\")}/>\r\n                        {question.row[3]}\r\n                    </label>\r\n                </div>\r\n                <div className=\"radio\">\r\n                    <label>\r\n                        <input type=\"radio\" value={question.row[4]} name={question.id} onChange={() => handleChange(question.id, \"D\")}/>\r\n                        {question.row[4]}\r\n                    </label>\r\n                </div>\r\n\r\n                <br /> <br />      \r\n            </div>\r\n            ))}\r\n            <br /> <br /> \r\n\r\n            <button type=\"button\" onClick ={() => calculateScore()} className=\"mt-2 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\">\r\n            Submit\r\n            </button>\r\n            <br /> <br />    \r\n            <div id=\"score\" style={showScore ? {} : { display: 'none' }}>\r\n                <p>Your final score is {score}.</p>\r\n            </div>\r\n\r\n        </div>\r\n\r\n      </form>\r\n      <ToastContainer />\r\n\r\n\r\n    </div>\r\n    \r\n    );\r\n};\r\n\r\nexport default Test;","import React, { useState, useEffect,useRef } from \"react\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport styles from \"./SignUp.module.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport Test from \"./Test\";\r\nimport { Link,useNavigate } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst Modules = () => {\r\n  const SPREADSHEET_ID = process.env.REACT_APP_QBANK_SHEET_ID; // extracted from the URL\r\n  const CLIENT_EMAIL = process.env.REACT_APP_CLIENT_EMAIL;\r\n  const PRIVATE_KEY = process.env.REACT_APP_PRIVATE_KEY.replace(/\\\\n/g, '\\n');\r\n  const navigate = useNavigate();\r\n\r\n\r\n  const [data, setData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [touched, setTouched] = useState({});\r\n  const [testModules, setTestModules] = useState([]);\r\n  const [sheetData, setSheetData] = useState([]);\r\n  const [selectedSheetName, setSelectedSheetName] = useState('');\r\n  const docRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n        // call api or anything\r\n        fetchSheets();\r\n        console.log(\"loaded\");\r\n     },[]);\r\n\r\n  const fetchSheets = async () => {\r\n    try {\r\n      debugger;\r\n      const doc =  await authenticateAndLoadDoc();\r\n      const sheets = Object.values(doc.sheetsById).map(sheet => ({\r\n      Name: sheet.title,\r\n      Id: sheet.index,\r\n    }));\r\n      setTestModules(sheets);\r\n\r\n      console.log(testModules1);\r\n\r\n    } catch (e) {\r\n      console.error('Error: ', e);\r\n    }  \r\n  };\r\n\r\n  const authenticateAndLoadDoc = async () => {\r\n    if (!docRef.current) {\r\n      const doc = new GoogleSpreadsheet(SPREADSHEET_ID);\r\n      try{\r\n        await doc.useServiceAccountAuth({\r\n        client_email: CLIENT_EMAIL,\r\n        private_key: PRIVATE_KEY\r\n      });\r\n      await doc.loadInfo();\r\n      docRef.current = doc;\r\n      }\r\n      catch(e){\r\n        console.error('Error: ', e);\r\n      }\r\n    }\r\n    return docRef.current;\r\n  };\r\n\r\n  const fetchSheetRows = async(moduleId,moduleName) => {\r\n    try {\r\n      debugger;\r\n      const doc =  await authenticateAndLoadDoc();\r\n      const sheet = doc.sheetsByIndex[moduleId];\r\n\r\n      const rows = await sheet.getRows();\r\n      const data = rows.map((row,index) => ({\r\n      row: row._rawData,\r\n      id: index,\r\n    }));\r\n      debugger;\r\n      console.log(data);\r\n      setSheetData(data);\r\n      setSelectedSheetName(moduleName);\r\n      navigate(\"/test\",{ state: {\r\n            sheetName: moduleName,\r\n            data: data,\r\n      }});\r\n\r\n    } catch (e) {\r\n      console.error('Error: ', e);\r\n    }  \r\n  }\r\n\r\n  const testModules1 = [\r\n    { id: 1, name: \"Module 1\", description: \"History\" },\r\n    { id: 2, name: \"Module 2\", description: \"Biology\" },\r\n    { id: 3, name: \"Module 3\", description: \"Physics\" },\r\n    { id: 4, name: \"Module 4\", description: \"Chemistry\" },\r\n    { id: 5, name: \"Module 5\", description: \"English\" },\r\n];\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <form\r\n        className={styles.formLogin}\r\n        autoComplete=\"off\"\r\n      >\r\n        <h2>Available Test Modules</h2>\r\n        <div>\r\n            {testModules.map((module) => (\r\n            <div key={module.Id} className=\"bg-white p-4 rounded-lg shadow hover:shadow-md transition\">\r\n                <h2 className=\"text-xl font-semibold\">{module.Name}</h2>\r\n                <button type=\"button\" onClick ={() => fetchSheetRows(module.Id,module.Name)} className=\"mt-2 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\">\r\n                Start Test\r\n                </button>\r\n                <br /> <br />      \r\n            </div>\r\n        ))}\r\n        </div>\r\n\r\n      </form>\r\n      <ToastContainer />\r\n\r\n    </div>\r\n    \r\n    );\r\n};\r\n\r\nexport default Modules;\r\n","import SignUp from \"./components/SignUp\";\nimport Login from \"./components/Login\";\nimport Modules from \"./components/Modules\"\nimport Test from \"./components/Test\";\nimport {Routes,Route,Navigate } from \"react-router-dom\";\n\nfunction App() {\n  return (\n      <Routes>\n        <Route path=\"/login\" element={<Login />} />\n        <Route path=\"/signup\" element={<SignUp />} />\n        <Route path=\"/modules\" element={<Modules />} />\n        <Route path=\"/test\" element={<Test />} />\n        <Route path=\"/\" element={<SignUp />} />\n      </Routes>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formLogin\":\"SignUp_formLogin__2rMog\",\"container\":\"SignUp_container___eulo\",\"unCompleted\":\"SignUp_unCompleted__2y5tt\",\"completed\":\"SignUp_completed__30lOr\",\"error\":\"SignUp_error__ALY7X\",\"terms\":\"SignUp_terms__1FZmv\",\"formLoginQ\":\"SignUp_formLoginQ__2DN6s\"};"],"sourceRoot":""}